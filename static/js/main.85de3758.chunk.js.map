{"version":3,"sources":["redux/actions/index.js","components/Link/index.jsx","containers/FilterLink/index.jsx","components/Footer/index.jsx","redux/reducers/index.js","redux/store/index.js","containers/AddTodo/index.jsx","components/Todo/index.jsx","containers/VisibileTodoList/index.jsx","components/TodoList/index.jsx","App.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","VisibilityFilters","nextTodoId","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","initialState","todos","store","createStore","action","console","log","Object","assign","text","completed","id","map","todo","input","onSubmit","e","preventDefault","value","subscribe","getState","ref","node","className","Todo","textDecoration","getVisibleTodos","t","Error","toggleTodo","App","VisibileTodoList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85de3758.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\n\r\n//VisibilityFilters {SHOW_ALL: 'SHOW_ALL', ...}\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n//Action Creators\r\nlet nextTodoId = 0\r\nexport const addTodo = text => ({\r\n    type: ADD_TODO,\r\n    id: nextTodoId++,\r\n    text: text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: TOGGLE_TODO,\r\n    id\r\n})","const Link=({active,children,onClick})=>(\r\n    <button \r\n    onClick={onClick}\r\n    disabled={active}\r\n    style={{marginLeft:'4px'}}>{children}</button>\r\n)\r\nexport default Link","import { connect } from 'react-redux'\r\nimport {setVisibilityFilter} from '../../redux/actions/index'\r\nimport Link from '../../components/Link'\r\nconst mapStateToProps=(state,ownProps)=>{\r\n    return{\r\n        active:ownProps.filter===state.visibilityFilter\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch,ownProps)=>{\r\n    return{\r\n        onClick:()=>{\r\n            dispatch(setVisibilityFilter(ownProps.filter))\r\n        }\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link)","import FilterLink from \"../../containers/FilterLink\"\r\nimport { VisibilityFilters } from \"../../redux/actions\"\r\n\r\nconst Footer=()=>(\r\n    <div>\r\n        <span>Show: </span>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n    </div>\r\n)\r\nexport default Footer","import { ADD_TODO, SET_VISIBILITY_FILTER, TOGGLE_TODO, VisibilityFilters } from \"../actions\"\r\n\r\nconst initialState = {\r\n    visibilityFilter: VisibilityFilters.SHOW_ALL,\r\n    todos: []\r\n}\r\nexport const todoApp = (state = initialState, action) => {\r\n    console.log(action)\r\n    // TODO: create action for delete\r\n    switch (action.type) {\r\n        case ADD_TODO :\r\n            return Object.assign({}, state, {\r\n                todos: [\r\n                    ...state.todos,\r\n                    {\r\n                        text: action.text,\r\n                        completed: false,\r\n                        id:action.id\r\n                    }\r\n                ]\r\n            })\r\n            case TOGGLE_TODO :\r\n                return Object.assign({}, state, {\r\n                    todos: state.todos.map((todo, id) => {\r\n                        console.log(todo);\r\n                        if (id === action.id) {\r\n                            return Object.assign({}, todo, {\r\n                                completed: !todo.completed,\r\n                            })\r\n                        }\r\n                        return todo;\r\n                    })\r\n                })\r\n        case SET_VISIBILITY_FILTER:\r\n            return Object.assign({},state,{\r\n                visibilityFilter:action.filter\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport {todoApp} from '../reducers'\r\nexport let store = createStore(todoApp);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {addTodo} from '../../redux/actions'\r\nimport {store} from '../../redux/store';\r\nimport './style.css'\r\nlet AddTodo = ({dispatch}) => {\r\n    console.log(dispatch);\r\n    let input;\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if(!input.value){\r\n                        return\r\n                    }\r\n                    dispatch(addTodo(input.value))\r\n                    input.value = '';\r\n                    store.subscribe(() => console.log(store.getState()))\r\n                }}    \r\n            >\r\n                <input ref={node => input = node} className=\"input\"/>\r\n                <button>Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect()(AddTodo)","//View\r\nexport const Todo = ({ onClick, completed, text }) => (\r\n    <li\r\n        onClick={onClick}\r\n        style={{\r\n            textDecoration: completed ? 'line-through' : 'none',\r\n            'listStyleType':'none'\r\n        }}\r\n    >\r\n        {text}\r\n    </li>\r\n  )","import { connect } from \"react-redux\";\r\nimport { TodoList } from \"../../components/TodoList\";\r\nimport { toggleTodo, VisibilityFilters } from \"../../redux/actions\";\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t =>t.completed);\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n    //   console.log(\"active\");\r\n      return todos.filter(t =>!t.completed);\r\n    default:\r\n      throw new Error(\"Unknown filter: \" + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import { Todo } from \"../Todo\";\r\n \r\n//View\r\nexport const TodoList = ({todos, toggleTodo}) => ( //mapState,mapDispatch\r\n    <ul>\r\n     {console.log(todos)}\r\n        {todos.map(todo => (\r\n            <Todo key={todo.id} \r\n                  {...todo}\r\n                  onClick={() => toggleTodo(todo.id)}  \r\n            />\r\n        ))}\r\n    </ul>\r\n)\r\n","import React from \"react\";\nimport Footer from \"./components/Footer\";\n// import Footer from \"./components/Footer\";\nimport AddTodo from \"./containers/AddTodo\";\nimport VisibileTodoList from \"./containers/VisibileTodoList\";\nimport './App.css'\nconst App = () => {\n    return (\n        <div>\n            <h1>Todo List</h1>\n            <div className=\"container\">\n                <AddTodo />\n                {/* //todolist- components */}\n                <VisibileTodoList />\n                <Footer />\n            </div>\n        </div>\n    );\n}\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}